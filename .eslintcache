[{"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\reportWebVitals.js":"1","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\App.js":"2","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\login\\Login_Register.js":"3","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\index.js":"4","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\Firestore.js":"5","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\login\\Login.js":"6","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\login\\Register.js":"7","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\exercise-log\\ExerciseLogPage.js":"8","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\Application.js":"9","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\providers\\UserProvider.jsx":"10","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\navbar\\navbar.js":"11","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\navbar\\Navbar.js":"12"},{"size":362,"mtime":1611524248652,"results":"13","hashOfConfig":"14"},{"size":262,"mtime":1611902272902,"results":"15","hashOfConfig":"14"},{"size":5047,"mtime":1611554033091,"results":"16","hashOfConfig":"14"},{"size":699,"mtime":1611887492163,"results":"17","hashOfConfig":"14"},{"size":1474,"mtime":1611639670432,"results":"18","hashOfConfig":"14"},{"size":2578,"mtime":1611905272556,"results":"19","hashOfConfig":"14"},{"size":2339,"mtime":1611871378675,"results":"20","hashOfConfig":"14"},{"size":8729,"mtime":1611871251626,"results":"21","hashOfConfig":"14"},{"size":881,"mtime":1611902286318,"results":"22","hashOfConfig":"14"},{"size":664,"mtime":1611640125339,"results":"23","hashOfConfig":"14"},{"size":268,"mtime":1611726201916,"results":"24","hashOfConfig":"14"},{"size":1069,"mtime":1611905213362,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1z0ybsc",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\reportWebVitals.js",[],"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\App.js",[],"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\login\\Login_Register.js",["53","54","55"],"import React, {Component} from 'react'\r\nimport firebase from \"../Firestore\"\r\n\r\nclass Login_Register extends Component{\r\n    state={\r\n        login_or_register:true,\r\n        login_correct:true,\r\n        user_value:\"\",\r\n        password_value:\"\",\r\n        userId:\"\",\r\n        partial:null\r\n    }\r\n\r\n    checkIfLoginCorrect=(e)=>{\r\n        e.preventDefault();\r\n        this.setState({login_or_register:true})\r\n\r\n        this.checkUser()\r\n    }\r\n\r\n    checkIfRegisterCorrect=(e)=>{\r\n        e.preventDefault();\r\n        this.setState({login_or_register:false})\r\n        this.createUser()\r\n    }\r\n\r\n    partialRender=()=>{\r\n        if(this.state.user_value.trim()===\"\" && this.state.password_value.trim()===\"\"){\r\n            return(\r\n            <div>\r\n                <br></br>\r\n                Username and password missing\r\n            </div>)\r\n        }else if(this.state.user_value.trim()===\"\" && !(this.state.password_value.trim()===\"\")){\r\n            return(\r\n            <div>\r\n                <br></br>\r\n                Username missing\r\n            </div>)\r\n        }else if(!(this.state.user_value.trim()===\"\") && this.state.password_value.trim()===\"\"){\r\n            return(\r\n            <div>\r\n                <br></br>\r\n                Password missing\r\n            </div>)\r\n        }else{\r\n            if(this.state.login_or_register){\r\n                return(\r\n                <div>\r\n                    <br></br>\r\n                    Username and/or password incorrect\r\n                </div>)\r\n            }else{\r\n                return(\r\n                    <div>\r\n                        <br></br>\r\n                        A user already exists with that username\r\n                    </div>)\r\n            }\r\n        }\r\n    }\r\n\r\n    checkUser=()=>{\r\n        let username=this.state.user_value\r\n        let password=this.state.password_value\r\n        let empty=true\r\n        let userRef=null\r\n        if(!(username.trim()===\"\" || password.trim()===\"\")){\r\n            const db=firebase.firestore()\r\n            let users= db.collection('users').where('username','==',username).where('password','==',password)\r\n            users.get().then((querySnapshot)=>{\r\n                empty=querySnapshot.empty\r\n                if(!querySnapshot.empty){\r\n                    querySnapshot.forEach((doc)=>{\r\n                        userRef=doc\r\n                    })\r\n                }\r\n            }).then(()=>{\r\n                if(!empty){\r\n                    this.setState({login_correct:true,userId:userRef.id,partial:null})\r\n                }else{\r\n                    let partial=this.partialRender()\r\n                    this.setState({login_correct:false,partial:partial})\r\n                }\r\n            })\r\n        }else{\r\n            let partial=this.partialRender()\r\n            this.setState({login_correct:false, partial:partial})\r\n\r\n        }\r\n    }\r\n\r\n    createUser=()=>{\r\n        let username=this.state.user_value\r\n        let password=this.state.password_value\r\n        let empty=true\r\n        console.log(this.state.user_value, this.state.password_value)\r\n        if(!(username.trim()===\"\" || password.trim()===\"\")){\r\n            const db=firebase.firestore()\r\n            let existing_users= db.collection('users').where('username','==',username)\r\n            existing_users.get().then((querySnapshot)=>{\r\n                empty=querySnapshot.empty\r\n            }).then(()=>{\r\n                if(empty){\r\n                    const userRef=db.collection(\"users\").add({\r\n                        username: username,\r\n                        password: password\r\n                    }).then((doc)=>{\r\n                        this.setState({login_correct:true, userId:doc.id, partial:null})\r\n                    })\r\n                }else{\r\n                    let partial=this.partialRender()\r\n                    this.setState({login_correct:false,partial:partial})\r\n                }\r\n            })\r\n        }else{\r\n            let partial=this.partialRender()\r\n            this.setState({login_correct:false,partial:partial})\r\n        }\r\n    }\r\n\r\n    upDateUsername=(e)=>{\r\n        this.setState({user_value:e.target.value})\r\n    }\r\n\r\n    upDatePassword=(e)=>{\r\n        this.setState({password_value:e.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                Login\r\n                {this.state.partial}\r\n                <br></br>\r\n                <input type=\"text\" id=\"username\" onChange={this.upDateUsername} value={this.state.user_value} placeholder=\"Username\"/>\r\n                <br></br>\r\n                <input type=\"password\" id=\"password\" onChange={this.upDatePassword} value={this.state.password_value} placeholder=\"Password\"/>\r\n                <br></br>\r\n                <button type=\"button\" id=\"login-in-button\" onClick={this.checkIfLoginCorrect}>Log In</button>\r\n                <button type=\"button\" id=\"register-button\" onClick={this.checkIfRegisterCorrect}>Register</button>\r\n                <a></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login_Register","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\index.js",[],"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\Firestore.js",[],"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\login\\Login.js",["56"],"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\login\\Register.js",["57","58","59"],"import React, {Component,useContext,useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {auth, generateUserDocument} from \"../Firestore\"\r\n\r\nconst Register=()=>{\r\n    const [email,setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [displayName, setDisplayName]=useState(\"\")\r\n    const [error,setError]=useState(null)\r\n    const [partial,setPartial]=useState(\"\")\r\n\r\n    const createUserWithEmailAndPasswordHandler=async(e,email,password)=>{\r\n        e.preventDefault()\r\n        setPartial(\"\")\r\n        try{\r\n            const {user} = await auth.createUserWithEmailAndPassword(email,password)\r\n            generateUserDocument(user, {displayName,password})\r\n        }catch(error){\r\n            setError(\"Error signing up with email and password\")\r\n            setPartial(\r\n                <p>\r\n                    {error.message}\r\n                </p>\r\n            )\r\n        }\r\n\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n        setDisplayName(\"\")\r\n    }\r\n\r\n    const upDateDisplayName=(e)=>{\r\n        setDisplayName(e.target.value)\r\n    }\r\n\r\n    const upDateEmail=(e)=>{\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const upDatePassword=(e)=>{\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Sign Up\r\n                </h1>\r\n                {partial}\r\n                <form>\r\n                    <label> Username:{\" \"}</label>\r\n                    <input type=\"text\" value={displayName} onChange={(e)=>upDateDisplayName(e)}/>\r\n                    <br></br>\r\n                    <label>Email:{\" \"}</label>\r\n                    <input type=\"email\" value={email} onChange={(e)=>upDateEmail(e)}/>\r\n                    <br></br>\r\n                    <label>Password:{\" \"}</label>\r\n                    <input type=\"password\" value={password} onChange={(e)=>upDatePassword(e)}/>\r\n                    <br></br>\r\n                    <button onClick={e=>{createUserWithEmailAndPasswordHandler(e,email,password)}}>Sign up</button>\r\n                    <br></br>\r\n                    <p>\r\n                        Already have an account?{\" \"}\r\n                        <Link to='/'>Sign in here</Link>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Register","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\exercise-log\\ExerciseLogPage.js",["60","61"],"import React, {useContext,useEffect,useState} from 'react'\r\nimport { auth, firestore } from '../Firestore'\r\nimport { UserContext } from '../providers/UserProvider'\r\n\r\nconst ExerciseLogPage=()=>{\r\n    const[text,setText]=useState('')\r\n    const[date,setDate]=useState('')\r\n    const[exercises,setExercises]=useState([])\r\n\r\n    const user=useContext(UserContext)\r\n\r\n    useEffect(()=>{\r\n        let today = new Date();\r\n        let dd = String(today.getDate()).padStart(2, '0');\r\n        let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n        let yyyy = today.getFullYear();\r\n        let cur_date = mm + '/' + dd + '/' + yyyy;\r\n\r\n        let docs=firestore.collection('logs').where('date','==', cur_date).where('uid','==',user.uid)\r\n        setDate(`${yyyy}-${mm}-${dd}`)\r\n        let empty=false\r\n        let doc_found\r\n        docs.get().then((querySnapshot)=>{\r\n            querySnapshot.forEach((doc)=>{\r\n                doc_found=doc\r\n            })\r\n            empty=querySnapshot.empty\r\n        }).then(()=>{\r\n            if (empty){\r\n                setText('')\r\n                setExercises([])\r\n            }else{\r\n                firestore.collection('logs').doc(doc_found.id).get().then((d)=>{\r\n                    setText(d.data().text)\r\n                    setExercises(JSON.parse(d.data().exercises))\r\n                    //console.log(d.data().exercises)\r\n                })\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const upDateText=(e)=>{\r\n        setText(e.target.value)\r\n        console.log(text)\r\n    }\r\n\r\n    const upDateDate=(e)=>{\r\n        let splitted=e.target.value.split(\"-\")\r\n        let new_date=`${splitted[1]}/${splitted[2]}/${splitted[0]}`\r\n\r\n        setDate(e.target.value)\r\n        let docs=firestore.collection('logs').where('date','==', new_date).where('uid','==',user.uid)\r\n        let empty=false\r\n        let doc_found\r\n        docs.get().then((querySnapshot)=>{\r\n            querySnapshot.forEach((doc)=>{\r\n                doc_found=doc\r\n            })\r\n            empty=querySnapshot.empty\r\n        }).then(()=>{\r\n            if(empty){\r\n                setText('')\r\n                setExercises([])\r\n                console.log(\"no log\")\r\n            }\r\n            else{\r\n                firestore.collection('logs').doc(doc_found.id).get().then((d)=>{\r\n                    setText(d.data().text)\r\n                    setExercises(JSON.parse(d.data().exercises))\r\n                    console.log(d.data().exercises)\r\n                })\r\n            }\r\n        })\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const saveLog=(e,date,text)=>{\r\n        let splitted=date.split(\"-\")\r\n        let new_date=`${splitted[1]}/${splitted[2]}/${splitted[0]}`\r\n        console.log(new_date)\r\n        let docs=firestore.collection('logs').where('date','==', new_date).where('uid','==',user.uid)\r\n        let empty=false\r\n        let doc_found\r\n        docs.get().then((querySnapshot)=>{\r\n            querySnapshot.forEach((doc)=>{\r\n                doc_found=doc\r\n            })\r\n            empty=querySnapshot.empty\r\n        }).then(()=>{\r\n            if(empty){\r\n                console.log(\"make new document\")\r\n                firestore.collection('logs').doc().set({date:new_date,text:text.trim(),uid:user.uid,exercises:JSON.stringify(exercises)})\r\n            }\r\n            else{\r\n                console.log(\"update document\")\r\n                firestore.collection('logs').doc(doc_found.id).update({text:text.trim(),exercises:JSON.stringify(exercises)})\r\n            }\r\n        })\r\n        console.log(text,\", \",new_date)\r\n    }\r\n\r\n    const addExercise=(e)=>{\r\n\r\n        //add a new exercise object\r\n        let exercise={\r\n            exer_name:\"\",\r\n            weight:0,\r\n            sets:0,\r\n            reps:0\r\n        }\r\n            \r\n        setExercises(exercises.concat(exercise))\r\n        console.log(exercises)\r\n    }\r\n\r\n    // const updateMetric=(e)=>{\r\n    //     const id=e.target.id.split(\"-\")[2]\r\n    //     let arr=[...exercises]\r\n    //     arr[parseInt(id)]={...arr[parseInt(id)],metric:e.target.value}\r\n    //     setExercises(arr)\r\n    //     console.log(exercises)\r\n    // }\r\n\r\n    const updateExercise=(e)=>{\r\n        const id=e.target.id.split(\"-\")[2]\r\n        console.log(id)\r\n        let arr=[...exercises]\r\n        arr[parseInt(id)]={...arr[parseInt(id)],exer_name:e.target.value}\r\n        setExercises(arr)\r\n        console.log(exercises)\r\n    }\r\n\r\n    const updateWeight=(e)=>{\r\n        const id=e.target.id.split(\"-\")[2]\r\n        let arr=[...exercises]\r\n        arr[parseInt(id)]={...arr[parseInt(id)],weight:parseInt(e.target.value,10)}\r\n        setExercises(arr)\r\n        console.log(exercises)\r\n    }\r\n\r\n    const updateSets=(e)=>{\r\n        const id=e.target.id.split(\"-\")[2]\r\n        let arr=[...exercises]\r\n        arr[parseInt(id)]={...arr[parseInt(id)],sets:parseInt(e.target.value,10)}\r\n        setExercises(arr)\r\n        console.log(exercises)\r\n    }\r\n\r\n    const updateReps=(e)=>{\r\n        const id=e.target.id.split(\"-\")[2]\r\n        let arr=[...exercises]\r\n        arr[parseInt(id)]={...arr[parseInt(id)],reps:parseInt(e.target.value,10)}\r\n        setExercises(arr)\r\n        console.log(exercises)\r\n    }\r\n\r\n    const deleteExercise=(e)=>{\r\n        const id=e.target.id.split(\"-\")[2]\r\n        console.log(\"delete exercise \"+id)\r\n        let arr=[...exercises]\r\n        arr.splice(parseInt(id),1)\r\n        setExercises(arr)\r\n    }\r\n\r\n    const deleteLog=(e)=>{\r\n        console.log(\"delete log\")\r\n        let splitted=date.split(\"-\")\r\n        let new_date=`${splitted[1]}/${splitted[2]}/${splitted[0]}`\r\n        console.log(new_date)\r\n        let docs=firestore.collection('logs').where('date','==', new_date).where('uid','==',user.uid)\r\n        let empty=false\r\n        let doc_found\r\n        docs.get().then((querySnapshot)=>{\r\n            querySnapshot.forEach((doc)=>{\r\n                doc_found=doc\r\n            })\r\n            empty=querySnapshot.empty\r\n        }).then(()=>{\r\n            if(!empty){\r\n                firestore.collection('logs').doc(doc_found.id).delete().then(()=>{console.log(\"deleted doc\")\r\n                setText('')\r\n                setExercises([])})\r\n                \r\n            }else{\r\n                console.log(\"doc doesn't exist\")\r\n            }\r\n        })\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Log for {date}</h1>\r\n                <label>Change date: {\" \"}</label>\r\n                <input type=\"date\" value={date} onChange={(e)=>upDateDate(e)}/>{\" \"}\r\n                <button onClick={(e)=>addExercise(e)}>Add an exercise</button>{\" \"}\r\n                <button onClick={(e)=>deleteLog(e)}>Delete log</button>\r\n                <br></br>\r\n                <h3>Exercises for the day</h3>\r\n                {\r\n                    exercises.map((exercise,index)=>{\r\n                        return(\r\n                            <div id={`exercise-${index}`} key={`${index}`}>\r\n                                <label>Exercise {index+1}: {\" \"}</label>\r\n                                <br></br>\r\n                                <input id={`exer-inp-${index}`} type=\"text\" value={exercise.exer_name} onChange={(e)=>updateExercise(e)}/>{\" \"}\r\n                                <label>Weight:</label>{\" \"}\r\n                                <input id={`weight-inp-${index}`} type=\"number\" value={exercise.weight} min=\"0\" onChange={(e)=>updateWeight(e)}/>\r\n                                \r\n                                {\" \"}\r\n                                <label>Sets:</label>{\" \"}\r\n                                <input id={`sets-inp-${index}`} type=\"number\" min=\"0\" value={exercise.sets} onChange={(e)=>updateSets(e)}/>{\" \"}\r\n                                <label>Reps:</label>{\" \"}\r\n                                <input id={`reps-inp-${index}`} type=\"number\" min=\"0\" value={exercise.reps} onChange={(e)=>updateReps(e)}/>{\" \"}\r\n                                <span id={`del-exer-${index}`} onClick={(e)=>{deleteExercise(e)}}>-</span>\r\n                                <br></br>\r\n                                <br></br>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <br></br>\r\n                <label>Notes:{\" \"}</label>\r\n                <br></br>\r\n                <textarea id=\"comment-box\" type=\"text\" value={text} onChange={(e)=>upDateText(e)}/>\r\n                <br></br>\r\n                <button onClick={(e)=>saveLog(e, date,text)}>Save</button>\r\n                <hr></hr>\r\n                <p>To ensure that changes made to a log are saved, click on Save.</p>\r\n                <p>Deleted logs are irretrievable.</p>\r\n            </div>\r\n        )\r\n    \r\n}\r\nexport default ExerciseLogPage","C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\Application.js",["62"],"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\providers\\UserProvider.jsx",[],"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\navbar\\navbar.js",["63","64","65","66"],"C:\\Users\\jeje2\\Desktop\\proj\\exercise-log\\src\\navbar\\Navbar.js",[],{"ruleId":"67","severity":1,"message":"68","line":105,"column":27,"nodeType":"69","messageId":"70","endLine":105,"endColumn":34},{"ruleId":"71","severity":1,"message":"72","line":142,"column":17,"nodeType":"73","endLine":142,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":142,"column":17,"nodeType":"73","endLine":142,"endColumn":20},{"ruleId":"67","severity":1,"message":"76","line":9,"column":12,"nodeType":"69","messageId":"70","endLine":9,"endColumn":17},{"ruleId":"67","severity":1,"message":"77","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"78","line":1,"column":26,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"76","line":9,"column":12,"nodeType":"69","messageId":"70","endLine":9,"endColumn":17},{"ruleId":"67","severity":1,"message":"79","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":40,"column":7,"nodeType":"82","endLine":40,"endColumn":9,"suggestions":"83"},{"ruleId":"67","severity":1,"message":"84","line":1,"column":40,"nodeType":"69","messageId":"70","endLine":1,"endColumn":50},{"ruleId":"67","severity":1,"message":"77","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"85","line":1,"column":26,"nodeType":"69","messageId":"70","endLine":1,"endColumn":34},{"ruleId":"67","severity":1,"message":"79","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"86","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":21},"no-unused-vars","'userRef' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'error' is assigned a value but never used.","'Component' is defined but never used.","'useContext' is defined but never used.","'auth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.","ArrayExpression",["87"],"'withRouter' is defined but never used.","'useState' is defined but never used.","'UserContext' is defined but never used.",{"desc":"88","fix":"89"},"Update the dependencies array to be: [user.uid]",{"range":"90","text":"91"},[1434,1436],"[user.uid]"]